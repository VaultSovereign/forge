id: cyber.pci_dss_misconfiguration_checker.v1
version: 1.0.0
keyword: pci-check
purpose: "Analyzes system configurations against common PCI DSS v4.0 requirements to identify misconfigurations and compliance gaps."
author: "VaultMesh Security"

safety:
  classification: read-only
  guardrails:
    - "Analysis is based solely on the provided configuration data."
    - "Does not perform active scanning or connect to any systems."
    - "Recommendations are advisory and require review by a Qualified Security Assessor (QSA)."

inputs:
  target_scope:
    type: string
    description: "A description of the target environment being assessed (e.g., 'Cardholder Data Environment Kubernetes Cluster')."
    required: true
  config_data:
    type: string
    description: "The raw configuration data to be analyzed (e.g., content of hardening scripts, firewall rules, server config files)."
    required: true
  pci_requirements:
    type: array
    items:
      type: string
    description: "A list of specific PCI DSS v4.0 requirements to check (e.g., ['Req 2.2.2', 'Req 8.3.6'])."
    required: true
    default:
      - "Req 1.2.1" # Firewall and router configurations
      - "Req 2.2.2" # Secure configuration standards
      - "Req 3.5.1" # PAN masking
      - "Req 4.2.1" # Strong cryptography for transmission
      - "Req 8.3.6" # Multi-factor authentication
  output_format:
    type: enum
    values: [json, yaml, markdown]
    default: json

prompt:
  system: |
    You are an expert AI assistant acting as a PCI DSS Qualified Security Assessor (QSA). Your task is to analyze provided configuration data against specific PCI DSS v4.0 requirements.

    **Analysis Protocol:**
    1.  **Scope Adherence:** Strictly limit your analysis to the provided `config_data` and the specified `pci_requirements`. Do not make assumptions about configurations not present in the data.
    2.  **Requirement Mapping:** For each requirement in `pci_requirements`, meticulously examine the `config_data` for evidence of compliance or non-compliance.
    3.  **Evidence-Based Findings:** Every finding must be directly supported by specific lines or sections from the `config_data`. Cite the evidence.
    4.  **Structured Output:** Generate a detailed report in JSON format that strictly conforms to the `cyber/pci_dss_misconfiguration_checker` schema.
    5.  **Risk & Remediation:** For each non-compliant finding, provide a clear risk description and actionable, best-practice remediation guidance.
    6.  **Confidence Scoring:** Assign a confidence score (0.0 to 1.0) for each finding, reflecting the quality and clarity of the evidence in the provided data.

    **Safety Constraints:**
    - You MUST NOT suggest running any commands that could alter the system state.
    - You MUST NOT generate exploit code or weaponized payloads.
    - All recommendations must be advisory and emphasize human review and testing in a pre-production environment.

  user: |
    **PCI DSS Misconfiguration Analysis Request**

    **Target Scope:**
    {{target_scope}}

    **PCI DSS Requirements to Assess:**
    {{#each pci_requirements}}
    - {{this}}
    {{/each}}

    **Configuration Data for Analysis:**
    ```
    {{config_data}}
    ```

    Please perform the analysis and generate the JSON report.

outputs:
  schema_ref: "../schemas/output.schema.json#/definitions/cyber/pci_dss_misconfiguration_checker"
  format: "{{output_format}}"
