{
  "commit": "2c4fa9828014a3181383afadb2c2f1edc1b525f5",
  "files": [
    ".claude/agents/cybersecurity-prompt-architect.md",
    ".env.example",
    ".github/copilot-instructions.md",
    ".github/pull_request_template.md",
    ".github/workflows/ci.yml",
    ".github/workflows/deck-build.yml",
    ".github/workflows/nightly-security.yml",
    ".github/workflows/pages.yml",
    ".github/workflows/release.yml",
    ".gitignore",
    "AGENTS.md",
    "ARTIFACTS.md",
    "CHANGELOG.md",
    "CODEOWNERS",
    "Dockerfile",
    "LICENSE",
    "Makefile",
    "README.md",
    "SECURITY.md",
    "agent/execute.ts",
    "agent/plan.ts",
    "agent/schemas.ts",
    "catalog/consciousness/template.yaml",
    "catalog/cyber/ai-guardrail-checker.yaml",
    "catalog/cyber/code-security-reviewer.yaml",
    "catalog/cyber/compliance-gap-analyzer.yaml",
    "catalog/cyber/container-security-scanner.yaml",
    "catalog/cyber/dependency-check.yaml",
    "catalog/cyber/dora.tprm.v1.yaml",
    "catalog/cyber/pci_dss_misconfiguration_checker.v1.yaml",
    "catalog/cyber/secrets-audit.yaml",
    "catalog/cyber/security-metrics-dashboard.yaml",
    "catalog/deck/fintech-strike-deck.yaml",
    "catalog/tem/guardrails-checker.yaml",
    "catalog/tem/reconnaissance.yaml",
    "catalog/tem/sonic.yaml",
    "catalog/tem/vision.yaml",
    "cli/forge.ts",
    "cli/index.ts",
    "cli/templateResolver.ts",
    "cloudbuild.yaml",
    "dispatcher/ensureConforms.ts",
    "dispatcher/expander.ts",
    "dispatcher/modelProvider.ts",
    "dispatcher/realityLedger.ts",
    "dispatcher/router.ts",
    "dispatcher/safety.ts",
    "dispatcher/types.ts",
    "docs/ANALYTICS.md",
    "docs/ARCHITECTURE.md",
    "docs/DEPLOY_GCP.md",
    "docs/DIAGRAMS/workbench-architecture.svg",
    "docs/DRILLS/FORGE_PREPUSH.md",
    "docs/FINTECH_PRICING.md",
    "docs/MCP_WIRING.md",
    "docs/PILOT_RUNBOOK.md",
    "docs/PRIVACY.md",
    "docs/QUICKSTART.md",
    "docs/SALES/DECK.marp.md",
    "docs/SALES/DECK_OUTLINE.md",
    "docs/SALES/DEMO_SCRIPT.md",
    "docs/SALES/FINTECH_PRICING.md",
    "docs/SALES/ONE_PAGER.marp.md",
    "docs/SALES/ONE_PAGER.md",
    "docs/SALES/index.html",
    "docs/SALES/index2.html",
    "docs/SALES/theme.css",
    "docs/SALES/tprm_report.sample.json",
    "docs/SALES/tprm_report.sample2.json",
    "docs/SCHEMAS.md",
    "docs/SUPPORT.md",
    "docs/TOS.md",
    "docs/WORKBENCH.md",
    "docs/tprm.v1.yaml",
    "examples/commands.md",
    "examples/inputs/ai_guardrail.min.json",
    "examples/inputs/code_review.min.json",
    "examples/inputs/compliance_gap.min.json",
    "examples/inputs/container_scan.min.json",
    "examples/inputs/metrics.min.json",
    "examples/inputs/secrets_audit.min.json",
    "examples/inputs/tprm.acme.json",
    "examples/iso27001.yaml",
    "examples/mcp.config.example.json",
    "examples/prescan/pre_changed.json",
    "examples/prescan/pre_docker.json",
    "examples/prescan/pre_secrets.json",
    "mcp/forge-mcp.ts",
    "mcp/vaultmesh-mcp-server.ts",
    "package.json",
    "profiles/blue.yaml",
    "profiles/consciousness.yaml",
    "profiles/exec.yaml",
    "profiles/vault.yaml",
    "reality_ledger/ledger.schema.json",
    "reality_ledger/node.ts",
    "reality_ledger/reality_ledger.py",
    "schemas/output.schema.json",
    "schemas/prompt.schema.json",
    "scripts/cleanup.sh",
    "scripts/forge-prepush.sh",
    "scripts/forge_seven_seals.sh",
    "scripts/ledger-rotate.sh",
    "scripts/ledger_inspect.py",
    "scripts/mcp-dev.sh",
    "scripts/polish_repo.py",
    "scripts/pre_scan/collect_changed_files.ts",
    "scripts/pre_scan/docker_scan.ts",
    "scripts/pre_scan/secrets_scan.ts",
    "scripts/pre_scan/tprm_collect.ts",
    "scripts/status.cjs",
    "scripts/summon-fixtures.sh",
    "tests/test_reality_ledger.py",
    "tools/codex.ts",
    "tools/forge.ts",
    "tools/ledger.ts",
    "tools/secrets_prescan.ts",
    "tsconfig.json",
    "vaultmesh-workspace-scaffold/.github/workflows/ci.yml",
    "vaultmesh-workspace-scaffold/.gitignore",
    "vaultmesh-workspace-scaffold/CONTRIBUTING.md",
    "vaultmesh-workspace-scaffold/Cargo.toml",
    "vaultmesh-workspace-scaffold/Makefile",
    "vaultmesh-workspace-scaffold/README.WORKSPACE.md",
    "vaultmesh-workspace-scaffold/SECURITY.md",
    "vaultmesh-workspace-scaffold/polis/controller/Cargo.toml",
    "vaultmesh-workspace-scaffold/polis/controller/src/main.rs",
    "vaultmesh-workspace-scaffold/rust-toolchain.toml",
    "vaultmesh-workspace-scaffold/vaultmesh/Cargo.toml",
    "vaultmesh-workspace-scaffold/vaultmesh/src/lib.rs",
    "vaultmesh-workspace-scaffold/vaultmesh/src/main.rs",
    "vaultmesh-workspace-scaffold/vaultmesh/tests/receipts_merkle_smoke.rs",
    "workbench/Dockerfile",
    "workbench/README-WORKBENCH.md",
    "workbench/bff/.env.example",
    "workbench/bff/package-lock.json",
    "workbench/bff/package.json",
    "workbench/bff/protos/vaultmesh/ai/v1/core.proto",
    "workbench/bff/public/assets/index-CKla0WuX.js",
    "workbench/bff/public/index.html",
    "workbench/bff/src/auth/oidc.ts",
    "workbench/bff/src/auth/rbac.ts",
    "workbench/bff/src/core/client.ts",
    "workbench/bff/src/core/grpc.ts",
    "workbench/bff/src/core/secrets.ts",
    "workbench/bff/src/env.ts",
    "workbench/bff/src/routes/execute.ts",
    "workbench/bff/src/routes/health.ts",
    "workbench/bff/src/routes/ledger.ts",
    "workbench/bff/src/routes/templates.ts",
    "workbench/bff/src/server.ts",
    "workbench/bff/src/types.ts",
    "workbench/bff/tsconfig.json",
    "workbench/docker-compose.yml",
    "workbench/frontend/index.html",
    "workbench/frontend/package-lock.json",
    "workbench/frontend/package.json",
    "workbench/frontend/src/App.js",
    "workbench/frontend/src/App.tsx",
    "workbench/frontend/src/api.js",
    "workbench/frontend/src/api.ts",
    "workbench/frontend/src/components/Header.js",
    "workbench/frontend/src/components/Header.tsx",
    "workbench/frontend/src/components/LedgerTable.js",
    "workbench/frontend/src/components/LedgerTable.tsx",
    "workbench/frontend/src/components/SSEConsole.js",
    "workbench/frontend/src/components/SSEConsole.tsx",
    "workbench/frontend/src/components/TemplateRunner.js",
    "workbench/frontend/src/components/TemplateRunner.tsx",
    "workbench/frontend/src/main.js",
    "workbench/frontend/src/main.tsx",
    "workbench/frontend/src/types.js",
    "workbench/frontend/src/types.ts",
    "workbench/frontend/src/vite-env.d.ts",
    "workbench/frontend/tsconfig.json",
    "workbench/frontend/vite.config.js",
    "workbench/frontend/vite.config.ts"
  ],
  "modules": [
    ".",
    "artifacts",
    "artifacts/demo",
    "artifacts/audit",
    "artifacts/prepush",
    "tools",
    "reality_ledger",
    ".pytest_cache",
    ".pytest_cache/v",
    "dist",
    "dist/tools",
    "dist/reality_ledger",
    "dist/catalog",
    "dist/dispatcher",
    "dist/agent",
    "dist/mcp",
    "dist/cli",
    "dist/schemas",
    "dist/logs",
    "dist/scripts",
    "dist/profiles",
    "catalog",
    "catalog/tem",
    "catalog/cyber",
    "catalog/consciousness",
    "catalog/codebase",
    "catalog/deck",
    "dispatcher",
    "tests",
    ".claude",
    ".claude/agents",
    "agent",
    "mcp",
    "docs",
    "docs/SALES",
    "docs/DIAGRAMS",
    "docs/DRILLS",
    "cli",
    "schemas",
    "logs",
    "workbench",
    "workbench/frontend",
    "workbench/bff",
    "examples",
    "examples/prescan",
    "examples/evidence",
    "examples/inputs",
    "scripts",
    "scripts/pre_scan",
    "vaultmesh-workspace-scaffold",
    "vaultmesh-workspace-scaffold/vaultmesh",
    "vaultmesh-workspace-scaffold/polis",
    "unforged_forge_genesis",
    "unforged_forge_genesis/receipts",
    "unforged_forge_genesis/archive",
    "unforged_forge_genesis/checkpoints",
    "unforged_forge_genesis/scripts",
    "unforged_forge_genesis/ore",
    "profiles",
    ".vscode",
    "coverage",
    "coverage/tools",
    "coverage/reality_ledger",
    "coverage/dispatcher",
    "coverage/agent",
    "coverage/mcp",
    "coverage/cli",
    "coverage/workbench",
    "coverage/scripts"
  ],
  "deps": true,
  "ci_index": ".github/workflows/release.yml:3:on:\n.github/workflows/release.yml:14:    runs-on: ubuntu-latest\n.github/workflows/release.yml:25:          node-version: '20'\n.github/workflows/release.yml:109:    runs-on: ubuntu-latest\n.github/workflows/nightly-security.yml:2:on:\n.github/workflows/nightly-security.yml:3:  schedule: [{ cron: \"17 1 * * *\" }]   # 01:17 UTC daily\n.github/workflows/nightly-security.yml:7:    runs-on: ubuntu-latest\n.github/workflows/nightly-security.yml:12:          node-version: '20'\n.github/workflows/pages.yml:3:on:\n.github/workflows/pages.yml:23:    runs-on: ubuntu-latest\n.github/workflows/pages.yml:29:          node-version: '20'\n.github/workflows/pages.yml:50:    runs-on: ubuntu-latest\n.github/workflows/deck-build.yml:3:on:\n.github/workflows/deck-build.yml:17:    runs-on: ubuntu-latest\n.github/workflows/deck-build.yml:23:          node-version: '20'\n.github/workflows/ci.yml:3:on:\n.github/workflows/ci.yml:11:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:15:        node-version: [18, 20]\n.github/workflows/ci.yml:24:          node-version: ${{ matrix.node-version }}\n.github/workflows/ci.yml:78:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:89:          python-version: '3.11'\n.github/workflows/ci.yml:106:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:114:          node-version: '20'\n.github/workflows/ci.yml:140:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:147:          node-version: '20'\n.github/workflows/ci.yml:218:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:224:          node-version: '20'\n.github/workflows/ci.yml:289:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:366:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:426:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:447:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:456:          node-version: '20'\n.github/workflows/ci.yml:497:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:506:          node-version: '20'\n.github/workflows/ci.yml:520:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:530:          node-version: '20'\n.github/workflows/ci.yml:615:    runs-on: ubuntu-latest\n.github/workflows/ci.yml:626:          node-version: '20'\n",
  "vitest": {},
  "pytest": "pytest-not-run\n",
  "workbench": {}
}
