name: lint-nightly

on:
  schedule:
    - cron: '17 2 * * *' # 02:17 UTC nightly
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint-strict:
    name: Lint (strict mode - all warnings fail)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20, 22]
        include:
          - node-version: 22
            allow_failure: true
    steps:
      - uses: actions/checkout@v4

      - name: Node & pnpm setup
        uses: ./.github/actions/node-pnpm-setup
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: 10.17.0

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-${{ matrix.node-version }}-
            pnpm-${{ runner.os }}-

      - name: Lint (strict - fail on warnings)
        continue-on-error: ${{ matrix.allow_failure || false }}
        run: pnpm exec eslint -c .eslintrc.json . --ext .ts,.tsx --max-warnings=0

      - name: Mark soft-fail result
        if: ${{ matrix.allow_failure }}
        run: echo "⚠️ Node ${{ matrix.node-version }} - failures allowed during transition period"

  template-validation:
    name: Validate Research Analyst Template
    runs-on: ubuntu-latest
    env:
      # Use a mock/test provider to avoid real API calls in nightly validation
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Node & pnpm setup
        uses: ./.github/actions/node-pnpm-setup
        with:
          node-version: 20
          pnpm-version: 10.17.0

      - name: Build
        run: pnpm run build

      - name: Validate schema compliance
        if: env.OPENAI_API_KEY != ''
        run: |
          echo "::group::Schema Validation"
          node scripts/validate-analyst-output.mjs artifacts/nightly/analyst_output.json
          echo "::endgroup::"

      - name: Upload validation artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: analyst-validation-${{ github.run_id }}
          path: /tmp/analyst_*.json
          if-no-files-found: ignore
