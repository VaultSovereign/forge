{
  "name": "vaultmesh-forge",
  "version": "1.0.0",
  "private": true,
  "description": "VaultMesh Forge - Earth's Civilization Ledger. Sovereign prompt orchestration platform for financial services compliance and cybersecurity operations.",
  "keywords": [
    "fintech",
    "dora",
    "compliance",
    "cybersecurity",
    "audit",
    "mcp",
    "templates"
  ],
  "homepage": "https://github.com/VaultSovereign/vm-forge#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/VaultSovereign/vm-forge.git"
  },
  "bugs": {
    "url": "https://github.com/VaultSovereign/vm-forge/issues"
  },
  "author": "VaultSovereign",
  "license": "Apache-2.0",
  "type": "module",
  "packageManager": "pnpm@10.17.0",
  "files": [
    "dist/**",
    "catalog/**",
    "profiles/**",
    "schemas/**",
    "docs/OPENAPI.md",
    "README.md",
    "LICENSE"
  ],
  "engines": {
    "node": ">=20 <23",
    "pnpm": ">=10.17.0"
  },
  "pnpm": {
    "overrides": {
      "cross-spawn": ">=7.0.5",
      "brace-expansion@2.x": ">=2.0.2",
      "brace-expansion@1.x": ">=1.1.12"
    }
  },
  "scripts": {
    "docs:sitemap": "node scripts/generate-docs-sitemap.mjs docs SITEMAP.md",
    "prepare": "husky install",
    "image:build": "docker build -t ghcr.io/vaultsovereign/forge:latest .",
    "image:push": "docker push ghcr.io/vaultsovereign/forge:latest",
    "//": "--- UTILS & AUTOMATION ---",
    "build": "tsc -b",
    "lint": "eslint -c .eslintrc.json . --ext .ts,.tsx",
    "lint:ci": "eslint -c .eslintrc.json . --ext .ts,.tsx -f stylish --max-warnings=0",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "schemas:build": "node -e \"import('yaml').then(()=>import('./scripts/build-schemas.mjs'))\"",
    "postbuild": "pnpm run schemas:build && mkdir -p dist && cp -R catalog profiles schemas dist/ && cp reality_ledger/reality_ledger.py dist/reality_ledger/",
    "build:web": "pnpm --prefix workbench/frontend run build && cp -r workbench/frontend/dist workbench/frontend-dist",
    "build:bff": "pnpm --prefix workbench/bff run build",
    "dev": "concurrently -k \"pnpm --prefix workbench/bff run dev\" \"pnpm --prefix workbench/frontend run dev\"",
    "build:workbench": "pnpm --prefix workbench/frontend run build && pnpm --prefix workbench/bff run build && mkdir -p workbench/bff/public && cp -R workbench/frontend/dist/* workbench/bff/public/ || true",
    "deck:build": "pnpm run build:sales",
    "build:sales": "pnpm run sales:deck && pnpm run sales:onepager",
    "sales:deck": "npx @marp-team/marp-cli docs/SALES/DECK.marp.md -o dist/sales-deck.html --allow-local-files --theme docs/SALES/theme.css && npx @marp-team/marp-cli docs/SALES/DECK.marp.md -o dist/sales-deck.pdf --allow-local-files --pdf --theme docs/SALES/theme.css && cp dist/sales-deck.html dist/index.html || true",
    "sales:onepager": "npx @marp-team/marp-cli docs/SALES/ONE_PAGER.marp.md -o dist/one-pager.html --allow-local-files --theme docs/SALES/theme.css",
    "watch:deck": "npx @marp-team/marp-cli -w docs/SALES/DECK.marp.md -o dist/sales-deck.html --allow-local-files --theme docs/SALES/theme.css",
    "test": "COVERAGE_RELAX=1 vitest run --coverage --passWithNoTests",
    "test:changed": "bash scripts/test-changed.sh",
    "ci:test:main": "COVERAGE_RELAX=0 vitest run --coverage --passWithNoTests",
    "ci:test:pr": "COVERAGE_RELAX=1 bash scripts/test-changed.sh",
    "test:watch": "vitest",
    "test:forge": "python3 -m pytest -q -rA tests/test_unforged_forge.py",
    "doctor:fast": "node dist/cli/index.js doctor --skip-provider || true",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "test:forge:deps": "python3 -m pip install --upgrade pip && pip3 install -r requirements-dev.txt && python3 -m pytest -q -rA tests/test_unforged_forge.py",
    "proposal:verify": "python3 unforged_forge_genesis/scripts/proposal_verify.py --proposal unforged_forge_genesis/ore/0002_protocol_evolution_template.json --genesis unforged_forge_genesis/genesis.json",
    "audit": "npm audit --production",
    "sbom": "pnpm dlx @cyclonedx/cyclonedx-npm@latest --output-format json --output-file sbom.json",
    "scan:secrets": "pnpm dlx gitleaks@latest detect --redact --no-git",
    "scan:container": "trivy image --exit-code 1 ghcr.io/vaultsovereign/forge:latest || true",
    "vm": "node --loader ts-node/esm --experimental-specifier-resolution=node cli/index.ts",
    "start": "node dist/cli/index.js",
    "mcp:dev": "node dist/mcp/vaultmesh-mcp-server.js",
    "workbench:prestart": "sh -c '[ -f agents/build/index.js ] || pnpm run build:agents'",
    "workbench:start": "pnpm run workbench:prestart && node workbench/bff/dist/server.js",
    "workbench:dev:bff": "npm --prefix workbench/bff run dev",
    "workbench:dev:fe": "npm --prefix workbench/frontend run dev",
    "forge:seals": "bash scripts/forge_seven_seals.sh",
    "forge:polish": "python3 scripts/polish_repo.py",
    "forge:clean": "bash scripts/cleanup.sh",
    "forge:ritual": "pnpm run forge:seals && pnpm run forge:polish && pnpm run forge:clean",
    "forge:status": "node scripts/status.cjs",
    "ci:gates": "bash scripts/forge-prepush.sh",
    "evolve:verify": "python3 unforged_forge_genesis/scripts/template_evolution_verify.py --proposal unforged_forge_genesis/ore/0004_template_evolution.json --repo-root .",
    "evolve:apply": "node scripts/template_evolution_apply.mjs unforged_forge_genesis/ore/0004_template_evolution.json --repo-root . && node scripts/template_index_build.mjs",
    "evolve:mint": "bash scripts/forge-mint-ore.sh unforged_forge_genesis/ore/0004_template_evolution.json unforged_forge_genesis",
    "evolve:all": "pnpm run evolve:verify && pnpm run evolve:apply && pnpm run evolve:mint",
    "evolution:journal": "node scripts/journal_append.mjs",
    "evolution:index": "node scripts/template_index_build.mjs",
    "ledger:rotate": "bash scripts/ledger-rotate.sh",
    "ledger:rotate:keep": "bash scripts/ledger-rotate.sh --keep",
    "ledger:inspect": "python3 scripts/ledger_inspect.py --pretty",
    "codex:build": "npx ts-node tools/codex.ts build",
    "codex:search": "npx ts-node tools/codex.ts search",
    "demo:compliance": "bash scripts/demo-compliance.sh",
    "build:agents": "tsup agents/index.ts --format esm --target node20 --dts=false --splitting=false --out-dir agents/build --clean",
    "dev:npm": "npm --prefix workbench/frontend run dev",
    "build:web:npm": "npm --prefix workbench/frontend run build && cp -r workbench/frontend/dist workbench/frontend-dist",
    "build:bff:npm": "npm --prefix workbench/bff run build",
    "start:bff:npm": "node workbench/bff/dist/server.js",
    "docs:openapi:md": "node scripts/generate-openapi-md.mjs docs/openapi/workbench.yaml docs/OPENAPI.md",
    "docs:openapi:check": "node scripts/generate-openapi-md.mjs docs/openapi/workbench.yaml docs/OPENAPI.md && git diff --exit-code -- docs/OPENAPI.md"
  },
  "bin": {
    "vm": "dist/cli/index.js"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.5.0",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "fast-glob": "^3.3.2",
    "glob": "^11.0.3",
    "lunr": "^2.3.9",
    "minimist": "^1.2.8",
    "openai": "^4.58.1",
    "safe-stable-stringify": "^2.4.3",
    "yaml": "^2.5.1",
    "yargs": "^17.7.2",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@fastify/rate-limit": "^8.0.3",
    "fastify": "^4.27.2",
    "@types/glob": "^9.0.0",
    "@types/lunr": "^2.3.7",
    "@types/minimist": "^1.2.5",
    "@types/node": "^24.5.2",
    "@types/yargs": "^17.0.32",
    "@typescript-eslint/eslint-plugin": "^7.16.1",
    "@typescript-eslint/parser": "^7.16.1",
    "@vitest/coverage-v8": "^1.0.0",
    "concurrently": "^9.2.1",
    "dotenv-cli": "^7.4.2",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "husky": "^9.0.0",
    "prettier": "^3.3.3",
    "ts-node": "^10.9.2",
    "tsup": "^8.2.4",
    "typescript": "^5.6.3",
    "vitest": "^1.0.0",
    "yaml": "^2.5.1"
  }
}
